'use client'

import UploadForm from '@/components/global/UploadForm/UploadForm';
import { GraphService } from '@/services/graph.service';
import { useMutation, useQuery, useQueryClient } from '@tanstack/react-query';
import React, { useState } from 'react'
import styles from './createPage.module.scss'
import { SpinnerLoader } from '@/components/global/SpinnerLoader/SpinnerLoader';
import { useAuth } from '@/providers/AuthProvider';
import { UserRole, IUser } from '@/types/user.interface';
import { UserRoleManager } from '@/components/admin/UserRoleManager/UserRoleManager';
import { CreateGraphForm } from '@/components/admin/CreateGraphForm/CreateGraphForm';
import { CreateEventForm } from '@/components/admin/CreateEventForm/CreateEventForm';
import { CreateScheduleForm } from '@/components/admin/CreateScheduleForm/CreateScheduleForm';
import { TransferGraphOwnershipForm } from '@/components/admin/TransferGraphOwnershipForm/TransferGraphOwnershipForm';
import { useRoleAccess } from '@/hooks/useRoleAccess';
import { AdminSection } from '@/components/admin/AdminSection/AdminSection';

const CreatePost = () => {
    const { user } = useAuth();
    const typedUser = user as IUser | null;
    const { canAccessCreate, canAccessEditor } = useRoleAccess(typedUser?.role);

    // –ü–æ–ª—É—á–µ–Ω–∏–µ –≥–ª–∞–≤–Ω—ã—Ö –≥—Ä–∞—Ñ–æ–≤
    const { isPending, isError, data: mainTopics, error } = useQuery({
        queryKey: ['graph/getParentGraphs'],
        queryFn: () => GraphService.getParentGraphs(),
    });

    if (isPending) return <SpinnerLoader/>;
    if (isError) return <p>–û—à–∏–±–∫–∞: {error.message}</p>;

    if (!canAccessEditor) {
        return <p>–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ</p>
    }

    return (
        <div className={styles.createPostWrapper}>
            {canAccessCreate && (
                <AdminSection 
                    title="–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–æ–ª—è–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"
                    emoji="üë•"
                >
                    <UserRoleManager />
                </AdminSection>
            )}
            
            {canAccessCreate && mainTopics && (
                <AdminSection 
                    title="–°–æ–∑–¥–∞–Ω–∏–µ –≥—Ä–∞—Ñ–∞"
                    emoji="üìä"
                >
                    <CreateGraphForm mainTopics={mainTopics.data} />
                </AdminSection>
            )}
            
            {canAccessCreate && mainTopics && (
                <AdminSection 
                    title="–ü–µ—Ä–µ–¥–∞—á–∞ –ø—Ä–∞–≤ –Ω–∞ –≥—Ä–∞—Ñ"
                    emoji="üîë"
                >
                    <TransferGraphOwnershipForm graphs={mainTopics.data} />
                </AdminSection>
            )}
            
            {canAccessEditor && mainTopics && (
                <AdminSection 
                    title="–°–æ–∑–¥–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è"
                    emoji="üìÖ"
                >
                    <CreateEventForm mainTopics={mainTopics.data} />
                </AdminSection>
            )}
            
            {canAccessEditor && mainTopics && (
                <AdminSection 
                    title="–°–æ–∑–¥–∞–Ω–∏–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è"
                    emoji="‚è∞"
                >
                    <CreateScheduleForm graphs={mainTopics.data} />
                </AdminSection>
            )}
        </div>
    );
};

export default CreatePost;


