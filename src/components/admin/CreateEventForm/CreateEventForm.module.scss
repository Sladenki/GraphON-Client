.container {
    padding: 20px;
    background: var(--block-color);
    border-radius: 10px;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    margin: 20px 0;
    border: 1px solid rgba(var(--main-Color), 0.2);

    h2 {
        margin-bottom: 20px;
        color: var(--text-color);
        font-size: 1.5rem;
        font-family: 'Roboto', sans-serif;
        font-weight: 500;
    }
}

.form {
    display: flex;
    flex-direction: column;
    gap: 20px;
}

.inputGroup {
    display: flex;
    flex-direction: column;
    gap: 8px;

    label {
        color: var(--text-color);
        font-family: 'Roboto', sans-serif;
        font-size: 1rem;
    }

    input, select, textarea {
        padding: 8px 12px;
        border: 1px solid rgba(var(--main-Color), 0.3);
        border-radius: 5px;
        font-size: 1rem;
        background-color: var(--block-color);
        color: var(--text-color);
        font-family: 'Roboto', sans-serif;
        transition: all 0.3s ease;

        &:focus {
            outline: none;
            border-color: rgb(var(--main-Color));
            box-shadow: 0 0 0 3px rgba(var(--main-Color), 0.1);
        }

        &::placeholder {
            color: var(--text-secondary);
            opacity: 0.7;
        }
    }

    textarea {
        min-height: 100px;
        resize: vertical;
    }

    select {
        cursor: pointer;
        appearance: none;
        background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3E%3Cpolyline points='6 9 12 15 18 9'%3E%3C/polyline%3E%3C/svg%3E");
        background-repeat: no-repeat;
        background-position: right 12px center;
        background-size: 16px;
        padding-right: 40px;

        option {
            background-color: var(--block-color);
            color: var(--text-color);
            padding: 8px;
        }
    }
}

.dateTimeGroup {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
    gap: 20px;
}

.submitButton {
    padding: 10px 20px;
    background-color: rgb(var(--main-Color));
    color: #fff;
    border: none;
    border-radius: 5px;
    cursor: pointer;
    font-size: 1rem;
    font-family: 'Roboto', sans-serif;
    transition: all 0.2s ease;
    align-self: flex-start;
    box-shadow: 0 2px 4px rgba(var(--main-Color), 0.2);

    &:hover:not(:disabled) {
        transform: translateY(-1px);
        box-shadow: 0 4px 8px rgba(var(--main-Color), 0.3);
    }

    &:disabled {
        background-color: rgba(var(--main-Color), 0.5);
        cursor: not-allowed;
        transform: none;
        box-shadow: none;
    }
} 

/* Theme-aware notice box */
.notice {
    padding: 20px;
    text-align: center;
    color: var(--main-text);
    background: var(--block-color);
    border-radius: 8px;
    border: 1px solid rgba(var(--main-Color-rgb), 0.2);
}

.checkboxRow {
    display: flex;
    align-items: center;
    gap: 12px;
    padding: 14px 16px;
    background: rgba(var(--main-Color), 0.04);
    border-radius: 12px;
    border: 1.5px solid rgba(var(--main-Color), 0.12);
    transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);
    cursor: pointer;

    @media (max-width: 768px) {
        padding: 12px 14px;
        gap: 10px;
        border-radius: 10px;
    }

    &:hover {
        background: rgba(var(--main-Color), 0.06);
        border-color: rgba(var(--main-Color), 0.2);
    }

    &:has(input:checked) {
        background: rgba(var(--main-Color), 0.1);
        border-color: rgba(var(--main-Color), 0.3);
    }

    input[type="checkbox"] {
        appearance: none;
        width: 20px;
        height: 20px;
        border: 2px solid rgba(var(--main-Color), 0.35);
        border-radius: 6px;
        cursor: pointer;
        position: relative;
        transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);
        flex-shrink: 0;
        background: var(--background-color);

        @media (max-width: 768px) {
            width: 18px;
            height: 18px;
        }

        &:hover {
            border-color: rgba(var(--main-Color), 0.6);
            background: rgba(var(--main-Color), 0.08);
        }

        &:checked {
            background: rgb(var(--main-Color));
            border-color: rgb(var(--main-Color));

            &::after {
                content: '';
                position: absolute;
                left: 50%;
                top: 50%;
                transform: translate(-50%, -50%) rotate(45deg);
                width: 5px;
                height: 10px;
                border: solid white;
                border-width: 0 2.5px 2.5px 0;

                @media (max-width: 768px) {
                    width: 4px;
                    height: 8px;
                    border-width: 0 2px 2px 0;
                }
            }
        }

        &:focus {
            outline: none;
            box-shadow: 0 0 0 4px rgba(var(--main-Color), 0.12);
        }

        &:disabled {
            opacity: 0.5;
            cursor: not-allowed;
            background: rgba(var(--text-color), 0.05);
        }
    }
}

.checkboxLabel {
    font-size: 15px;
    font-weight: 500;
    color: var(--text-color);
    font-family: var(--font-inter);
    user-select: none;
    letter-spacing: -0.01em;
    flex: 1;

    @media (max-width: 768px) {
        font-size: 14px;
    }
}

// Dark theme
@media (prefers-color-scheme: dark) {
    .checkboxRow {
        background: rgba(var(--main-Color), 0.06);
        border-color: rgba(var(--main-Color), 0.18);

        &:hover {
            background: rgba(var(--main-Color), 0.1);
            border-color: rgba(var(--main-Color), 0.3);
        }

        &:has(input:checked) {
            background: rgba(var(--main-Color), 0.15);
            border-color: rgba(var(--main-Color), 0.4);
        }

        input[type="checkbox"] {
            border-color: rgba(var(--main-Color), 0.45);

            &:hover {
                border-color: rgba(var(--main-Color), 0.7);
            }
        }
    }
}

.counter {
    font-size: 12px;
    color: var(--main-text);
    opacity: 0.7;
    margin-top: 4px;
    text-align: right;
}

.counterError {
    color: #ef4444;
    opacity: 1;
}