"use client";

import React, { useState, useMemo } from 'react';
import PopUpWrapper from '@/components/global/PopUpWrapper/PopUpWrapper';
import styles from './AdBanner.module.scss';

export interface AdBannerProps {
    title?: string;
    subtitle?: string;
    ctaText?: string;
    email?: string;
    tg?: string;
    onClose?: () => void;
    className?: string;
}

const DEFAULT_TITLE = 'SMM-—Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç ‚Äî –Ω–∞—á–Ω–∏ —Å –Ω–∞–º–∏!';
const DEFAULT_SUBTITLE = '–ö—Ä—É–ø–Ω–æ–µ —Ñ–µ—Ä–º–µ—Ä—Å–∫–æ–µ —Ö–æ–∑—è–π—Å—Ç–≤–æ –∏—â–µ—Ç —ç–Ω–µ—Ä–≥–∏—á–Ω–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞ –¥–ª—è —Å–æ—Ü—Å–µ—Ç–µ–π';
const DEFAULT_CTA = '–£–∑–Ω–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω–µ–µ';

export const AdBanner: React.FC<AdBannerProps> = ({
    title = DEFAULT_TITLE,
    subtitle = DEFAULT_SUBTITLE,
    ctaText = DEFAULT_CTA,
    email = 'marketing@dobrinskoe.com',
    tg = '@dobrinskoe_fh',
    onClose,
    className
}) => {
    const [open, setOpen] = useState(false);
    const [copied, setCopied] = useState(false);

    const handleOpen = () => setOpen(true);
    const handleClose = () => {
        setOpen(false);
        onClose?.();
    };

    const rootClass = useMemo(() => [styles.bannerRoot, className].filter(Boolean).join(' '), [className]);

    const handleCopyEmail = async (e: React.MouseEvent<HTMLButtonElement>) => {
        e.stopPropagation();
        try {
            if (navigator.clipboard && navigator.clipboard.writeText) {
                await navigator.clipboard.writeText(email);
            } else {
                const textarea = document.createElement('textarea');
                textarea.value = email;
                textarea.style.position = 'fixed';
                textarea.style.opacity = '0';
                document.body.appendChild(textarea);
                textarea.focus();
                textarea.select();
                document.execCommand('copy');
                document.body.removeChild(textarea);
            }
            setCopied(true);
            setTimeout(() => setCopied(false), 1500);
        } catch (_) {
            // no-op
        }
    };

    return (
        <div className={rootClass}>
            <div className={styles.content}>
                <div className={styles.badge}>‚ú® –í–∞–∫–∞–Ω—Å–∏—è</div>
                <h3 className={styles.title}>{title}</h3>
                <p className={styles.subtitle}>{subtitle}</p>
                <div className={styles.chips}>
                    <span className={styles.chip}>–ë–µ–∑ –æ–ø—ã—Ç–∞</span>
                    <span className={styles.chip}>–ö—Ä–µ–∞—Ç–∏–≤</span>
                    <span className={styles.chip}>SMM</span>
                </div>
                <div className={styles.actions}>
                    <button className={styles.ctaButton} onClick={handleOpen}>{ctaText}</button>
                    <button type="button" className={styles.contactButton} onClick={handleCopyEmail} aria-label="–°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å email">
                        {copied ? '‚úÖ –°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–æ' : 'üìß Email'}
                    </button>
                    <a className={styles.tgContactButton} href={`https://t.me/${tg.replace('@','')}`} target="_blank" rel="noreferrer" onClick={(e) => e.stopPropagation()}>‚úàÔ∏è Telegram</a>
                </div>
            </div>
            <div className={styles.glow} aria-hidden="true" />

            <PopUpWrapper isOpen={open} onClose={handleClose} width={"min(680px, 92vw)"}>
                <div className={styles.modalHeader}>
                    <h3>–î–æ–±—Ä–∏–Ω—Å–∫–æ–µ —Ñ–µ—Ä–º–µ—Ä—Å–∫–æ–µ —Ö–æ–∑—è–π—Å—Ç–≤–æ</h3>
                </div>
                <div className={styles.modalBody}>
                    <p className={styles.lead}><strong>–ù—É–∂–µ–Ω —ç–Ω–µ—Ä–≥–∏—á–Ω—ã–π, –∫—Ä–µ–∞—Ç–∏–≤–Ω—ã–π –∏ –∞–º–±–∏—Ü–∏–æ–∑–Ω—ã–π —á–µ–ª–æ–≤–µ–∫ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Å–æ—Ü—Å–µ—Ç—è–º–∏.</strong></p>
                    <p className={styles.note}>–ù–µ –Ω—É–∂–µ–Ω –æ–ø—ã—Ç ‚Äî –≤—Å–µ–º—É –Ω–∞—É—á–∏–º! –ì–ª–∞–≤–Ω–æ–µ ‚Äî –∂–µ–ª–∞–Ω–∏–µ —É—á–∏—Ç—å—Å—è, –±—ã—Å—Ç—Ä–æ —Å—Ö–≤–∞—Ç—ã–≤–∞—Ç—å –Ω–æ–≤–æ–µ –∏ –±—ã—Ç—å –≤ —Ç–µ–º–µ —Ç—Ä–µ–Ω–¥–æ–≤. –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å, –∏–Ω–∏—Ü–∏–∞—Ç–∏–≤–Ω–æ—Å—Ç—å –∏ –∫—Ä–µ–∞—Ç–∏–≤ ‚Äî —Ç–≤–æ–∏ –≥–ª–∞–≤–Ω—ã–µ —Å—É–ø–µ—Ä—Å–∏–ª—ã.</p>

                    <div className={styles.section}>
                        <h4 className={styles.sectionTitle}>–ß—Ç–æ –ø—Ä–µ–¥—Å—Ç–æ–∏—Ç –¥–µ–ª–∞—Ç—å</h4>
                        <ul className={styles.list}>
                            <li>–í–µ—Å—Ç–∏ —Å–æ—Ü—Å–µ—Ç–∏: –∫–æ–Ω—Ç–µ–Ω—Ç, –ø–æ—Å—Ç—ã, —Å—Ç–æ—Ä–∏—Å, —Ä–∏–ª—Å—ã</li>
                            <li>–†–∞–±–æ—Ç–∞—Ç—å —Å –∞—É–¥–∏—Ç–æ—Ä–∏–µ–π: –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏, –æ–±—â–µ–Ω–∏–µ, –≤–æ–≤–ª–µ—á–µ–Ω–∏–µ</li>
                            <li>–ò—Å–∫–∞—Ç—å –∏ –ø—Ä–µ–¥–ª–∞–≥–∞—Ç—å –Ω–æ–≤—ã–µ –∏–¥–µ–∏ –¥–ª—è –ø—Ä–æ–¥–≤–∏–∂–µ–Ω–∏—è</li>
                        </ul>
                    </div>

                    <div className={styles.section}>
                        <h4 className={styles.sectionTitle}>–ú—ã –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º</h4>
                        <ul className={styles.list}>
                            <li>–û–ø—ã—Ç –∏ –ø—Ä–∞–∫—Ç–∏–∫—É —Å –Ω—É–ª—è</li>
                            <li>–†–∞–±–æ—Ç—É –≤ –∫—Ä—É–ø–Ω–æ–π —Å—Ç–∞–±–∏–ª—å–Ω–æ–π –∫–æ–º–ø–∞–Ω–∏–∏</li>
                            <li>–†–æ—Å—Ç –∏ —Ä–∞–∑–≤–∏—Ç–∏–µ –≤ SMM</li>
                        </ul>
                    </div>

                    <div className={styles.contacts}>
                        <button type="button" className={styles.mailButton} onClick={handleCopyEmail} aria-label="–°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å email">
                            {copied ? '‚úÖ –°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–æ' : `–°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å ${email}`}
                        </button>
                        <a className={styles.tgButton} href={`https://t.me/${tg.replace('@','')}`} target="_blank" rel="noreferrer">–ù–∞–ø–∏—Å–∞—Ç—å –≤ Telegram {tg}</a>
                    </div>
                    {/* –ö–Ω–æ–ø–∫—É –∑–∞–∫—Ä—ã—Ç–∏—è —É–±—Ä–∞–ª–∏ –ø–æ –∑–∞–ø—Ä–æ—Å—É */}
                </div>
            </PopUpWrapper>
        </div>
    );
};

export default AdBanner;

