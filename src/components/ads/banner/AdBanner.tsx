"use client";

import React, { useState, useMemo } from 'react';
import PopUpWrapper from '@/components/global/PopUpWrapper/PopUpWrapper';
import styles from './AdBanner.module.scss';

export interface AdBannerProps {
    title?: string;
    subtitle?: string;
    ctaText?: string;
    email?: string;
    tg?: string;
    onClose?: () => void;
    className?: string;
}

const AD_BANNER_COPY = {
    badge: '‚ú® –í–∞–∫–∞–Ω—Å–∏—è',
    title: 'SMM-—Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç ‚Äî –Ω–∞—á–Ω–∏ —Å –Ω–∞–º–∏!',
    subtitle: '–ö—Ä—É–ø–Ω–æ–µ —Ñ–µ—Ä–º–µ—Ä—Å–∫–æ–µ —Ö–æ–∑—è–π—Å—Ç–≤–æ –∏—â–µ—Ç —ç–Ω–µ—Ä–≥–∏—á–Ω–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞ –¥–ª—è —Å–æ—Ü—Å–µ—Ç–µ–π',
    chips: ['–ë–µ–∑ –æ–ø—ã—Ç–∞', '–ö—Ä–µ–∞—Ç–∏–≤', 'SMM'],
    employerName: '–î–æ–±—Ä–∏–Ω—Å–∫–æ–µ —Ñ–µ—Ä–º–µ—Ä—Å–∫–æ–µ —Ö–æ–∑—è–π—Å—Ç–≤–æ',
    lead: '–ù—É–∂–µ–Ω —ç–Ω–µ—Ä–≥–∏—á–Ω—ã–π, –∫—Ä–µ–∞—Ç–∏–≤–Ω—ã–π –∏ –∞–º–±–∏—Ü–∏–æ–∑–Ω—ã–π —á–µ–ª–æ–≤–µ–∫ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Å–æ—Ü—Å–µ—Ç—è–º–∏.',
    note: '–ù–µ –Ω—É–∂–µ–Ω –æ–ø—ã—Ç ‚Äî –≤—Å–µ–º—É –Ω–∞—É—á–∏–º! –ì–ª–∞–≤–Ω–æ–µ ‚Äî –∂–µ–ª–∞–Ω–∏–µ —É—á–∏—Ç—å—Å—è, –±—ã—Å—Ç—Ä–æ —Å—Ö–≤–∞—Ç—ã–≤–∞—Ç—å –Ω–æ–≤–æ–µ –∏ –±—ã—Ç—å –≤ —Ç–µ–º–µ —Ç—Ä–µ–Ω–¥–æ–≤. –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å, –∏–Ω–∏—Ü–∏–∞—Ç–∏–≤–Ω–æ—Å—Ç—å –∏ –∫—Ä–µ–∞—Ç–∏–≤ ‚Äî —Ç–≤–æ–∏ –≥–ª–∞–≤–Ω—ã–µ —Å—É–ø–µ—Ä—Å–∏–ª—ã.',
    whatToDoTitle: '–ß—Ç–æ –ø—Ä–µ–¥—Å—Ç–æ–∏—Ç –¥–µ–ª–∞—Ç—å',
    whatToDoList: [
        '–í–µ—Å—Ç–∏ —Å–æ—Ü—Å–µ—Ç–∏: –∫–æ–Ω—Ç–µ–Ω—Ç, –ø–æ—Å—Ç—ã, —Å—Ç–æ—Ä–∏—Å, —Ä–∏–ª—Å—ã',
        '–†–∞–±–æ—Ç–∞—Ç—å —Å –∞—É–¥–∏—Ç–æ—Ä–∏–µ–π: –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏, –æ–±—â–µ–Ω–∏–µ, –≤–æ–≤–ª–µ—á–µ–Ω–∏–µ',
        '–ò—Å–∫–∞—Ç—å –∏ –ø—Ä–µ–¥–ª–∞–≥–∞—Ç—å –Ω–æ–≤—ã–µ –∏–¥–µ–∏ –¥–ª—è –ø—Ä–æ–¥–≤–∏–∂–µ–Ω–∏—è',
    ],
    weOfferTitle: '–ú—ã –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º',
    weOfferList: [
        '–û–ø—ã—Ç –∏ –ø—Ä–∞–∫—Ç–∏–∫—É —Å –Ω—É–ª—è',
        '–†–∞–±–æ—Ç—É –≤ –∫—Ä—É–ø–Ω–æ–π —Å—Ç–∞–±–∏–ª—å–Ω–æ–π –∫–æ–º–ø–∞–Ω–∏–∏',
        '–†–æ—Å—Ç –∏ —Ä–∞–∑–≤–∏—Ç–∏–µ –≤ SMM',
    ],
    defaultEmail: 'marketing@dobrinskoe.com',
    defaultTg: '@dobrinskoe_fh',
} as const;


export const AdBanner: React.FC<AdBannerProps> = ({
    title = AD_BANNER_COPY.title,
    subtitle = AD_BANNER_COPY.subtitle,
    email = AD_BANNER_COPY.defaultEmail,
    tg = AD_BANNER_COPY.defaultTg,
    onClose,
    className
}) => {
    const [open, setOpen] = useState(false);
    const [copied, setCopied] = useState(false);

    const handleOpen = () => setOpen(true);
    const handleClose = () => {
        setOpen(false);
        onClose?.();
    };

    const rootClass = useMemo(() => [styles.bannerRoot, className].filter(Boolean).join(' '), [className]);

    const handleCopyEmail = async (e: React.MouseEvent<HTMLButtonElement>) => {
        e.stopPropagation();
        try {
            if (navigator.clipboard && navigator.clipboard.writeText) {
                await navigator.clipboard.writeText(email);
            } else {
                const textarea = document.createElement('textarea');
                textarea.value = email;
                textarea.style.position = 'fixed';
                textarea.style.opacity = '0';
                document.body.appendChild(textarea);
                textarea.focus();
                textarea.select();
                document.execCommand('copy');
                document.body.removeChild(textarea);
            }
            setCopied(true);
            setTimeout(() => setCopied(false), 1500);
        } catch (_) {
            // no-op
        }
    };

    return (
        <div className={rootClass}>
            <div className={styles.content}>
                <div className={styles.badge}>{AD_BANNER_COPY.badge}</div>
                <h3 className={styles.title}>{title}</h3>
                <p className={styles.subtitle}>{subtitle}</p>
                <div className={styles.chips}>
                    {AD_BANNER_COPY.chips.map((chip) => (
                        <span key={chip} className={styles.chip}>{chip}</span>
                    ))}
                </div>
                <div className={styles.actions}>
                    <button className={styles.ctaButton} onClick={handleOpen}>–£–∑–Ω–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω–µ–µ</button>
                    <button type="button" className={styles.contactButton} onClick={handleCopyEmail} aria-label="–°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å email">
                        {copied ? '‚úÖ –°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–æ' : 'üìß Email'}
                    </button>
                    <a className={styles.tgContactButton} href={`https://t.me/${tg.replace('@','')}`} target="_blank" rel="noreferrer" onClick={(e) => e.stopPropagation()}>‚úàÔ∏è Telegram</a>
                </div>
            </div>
            <div className={styles.glow} aria-hidden="true" />

            <PopUpWrapper isOpen={open} onClose={handleClose} width={"min(680px, 92vw)"}>
                <div className={styles.modalHeader}>
                    <h3>{AD_BANNER_COPY.employerName}</h3>
                </div>
                <div className={styles.modalBody}>
                    <p className={styles.lead}><strong>{AD_BANNER_COPY.lead}</strong></p>
                    <p className={styles.note}>{AD_BANNER_COPY.note}</p>

                    <div className={styles.section}>
                        <h4 className={styles.sectionTitle}>{AD_BANNER_COPY.whatToDoTitle}</h4>
                        <ul className={styles.list}>
                            {AD_BANNER_COPY.whatToDoList.map((item) => (
                                <li key={item}>{item}</li>
                            ))}
                        </ul>
                    </div>

                    <div className={styles.section}>
                        <h4 className={styles.sectionTitle}>{AD_BANNER_COPY.weOfferTitle}</h4>
                        <ul className={styles.list}>
                            {AD_BANNER_COPY.weOfferList.map((item) => (
                                <li key={item}>{item}</li>
                            ))}
                        </ul>
                    </div>

                    <div className={styles.contacts}>
                        <button type="button" className={styles.mailButton} onClick={handleCopyEmail} aria-label="–°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å email">
                            {copied ? '‚úÖ –°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–æ' : `–°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å ${email}`}
                        </button>
                        <a className={styles.tgButton} href={`https://t.me/${tg.replace('@','')}`} target="_blank" rel="noreferrer">–ù–∞–ø–∏—Å–∞—Ç—å –≤ Telegram {tg}</a>
                    </div>
                </div>
            </PopUpWrapper>
        </div>
    );
};

export default AdBanner;

